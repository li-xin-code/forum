<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lixin.campusforum.dao.UserInfoDao">

    <resultMap id="BaseResultMap" type="com.lixin.campusforum.model.entity.UserInfoDo">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="userId" column="user_id" jdbcType="CHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="userSign" column="user_sign" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id,
               user_id,
               gender,
               user_sign,
               create_time
        from user_info
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from user_info
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.lixin.campusforum.model.entity.UserInfoDo" useGeneratedKeys="true">
        insert into user_info
        ( id, user_id, gender, face
        , user_sign, create_time)
        values ( #{id,jdbcType=BIGINT}, #{userId,jdbcType=CHAR}, #{gender,jdbcType=INTEGER}, #{face}
               , #{userSign,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.lixin.campusforum.model.entity.UserInfoDo" useGeneratedKeys="true">
        insert into user_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="userId != null">user_id,</if>
            <if test="gender != null">gender,</if>
            <if test="userSign != null">user_sign,</if>
            <if test="createTime != null">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id,jdbcType=BIGINT},</if>
            <if test="userId != null">#{userId,jdbcType=CHAR},</if>
            <if test="gender != null">#{gender,jdbcType=INTEGER},</if>
            <if test="userSign != null">#{userSign,jdbcType=VARCHAR},</if>
            <if test="createTime != null">#{createTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.lixin.campusforum.model.entity.UserInfoDo">
        update user_info
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=CHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="userSign != null">
                user_sign = #{userSign,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lixin.campusforum.model.entity.UserInfoDo">
        update user_info
        set user_id     = #{userId,jdbcType=CHAR},
            gender      = #{gender,jdbcType=INTEGER},
            user_sign   = #{userSign,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByUserId">
        update user_info
        <set>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="userSign != null and userSign != ''">
                user_sign = #{userSign},
            </if>
            <if test="face != null and face != ''">
                face = #{face},
            </if>
        </set>
        where user_id = #{userId}
    </update>
</mapper>
